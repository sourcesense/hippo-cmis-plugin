<?xml version="1.0" encoding="UTF-8"?>
<!--
  Copyright 2010 Hippo

  Licensed under the Apache License, Version 2.0 (the  "License");
  you may not use this file except in compliance with the License.
  You may obtain a copy of the License at

  http://www.apache.org/licenses/LICENSE-2.0

  Unless required by applicable law or agreed to in writing, software
  distributed under the License is distributed on an "AS IS"
  BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
  See the License for the specific language governing permissions and
  limitations under the License.
-->
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:lang="http://www.springframework.org/schema/lang"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xmlns:util="http://www.springframework.org/schema/util"
       xmlns:aop="http://www.springframework.org/schema/aop"
       xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-3.0.xsd
                           http://www.springframework.org/schema/lang http://www.springframework.org/schema/beans/spring-lang-3.0.xsd
                           http://www.springframework.org/schema/util http://www.springframework.org/schema/util/spring-util-3.0.xsd
                           http://www.springframework.org/schema/aop http://www.springframework.org/schema/aop/spring-aop-3.0.xsd">

  <import resource="classpath:/org/hippoecm/hst/site/optional/jaxrs/SpringComponentManager-rest-jackson.xml" />
  <import resource="classpath:/org/hippoecm/hst/site/optional/jaxrs/SpringComponentManager-rest-plain-pipeline.xml" />
  <import resource="classpath:/org/hippoecm/hst/site/optional/jaxrs/SpringComponentManager-rest-content-pipeline.xml" />

  <!-- Custom JAX-RS REST Plain Resource Providers to be overriden. -->
  <bean id="customRestPlainResourceProviders" class="org.springframework.beans.factory.config.ListFactoryBean">
    <property name="sourceList">
      <list>
        <bean class="org.apache.cxf.jaxrs.lifecycle.SingletonResourceProvider">
          <constructor-arg>
            <bean class="com.onehippo.gogreen.jaxrs.services.TopProductsResource" />
          </constructor-arg>
        </bean>
      </list>
    </property>
  </bean>

  <!-- Custom JAX-RS REST Content Resource Providers to be overriden. -->
  <bean id="customRestContentResourceProviders" class="org.springframework.beans.factory.config.ListFactoryBean">
    <property name="sourceList">
      <list>
        <!-- These came from the hst demosuite, I 'm not deleting them since we should structure
        the ContentResource classes in the same hierarchical manner as the ProductRepresentation, which extends
        DocumentRepresentation which extends BaseDocumentRepresentation.........

        <bean class="org.apache.cxf.jaxrs.lifecycle.SingletonResourceProvider">
          <constructor-arg>
            <bean class="com.onehippo.gogreen.jaxrs.services.BaseDocumentContentResource" />
          </constructor-arg>
        </bean>
        <bean class="org.apache.cxf.jaxrs.lifecycle.SingletonResourceProvider">
          <constructor-arg>
            <bean class="com.onehippo.gogreen.jaxrs.services.DocumentContentResource" />
          </constructor-arg>
        </bean>
        -->

<!-- This has been commented by anovarini for testing

        <bean class="org.apache.cxf.jaxrs.lifecycle.SingletonResourceProvider">
          <constructor-arg>
            <bean class="com.onehippo.gogreen.jaxrs.services.ProductContentResource" />
          </constructor-arg>
        </bean>
-->

        <bean class="org.apache.cxf.jaxrs.lifecycle.SingletonResourceProvider">
          <constructor-arg>
            <bean class="com.sourcesense.opencmis.server.ProductContentResource" />
          </constructor-arg>
        </bean>
      </list>
    </property>
  </bean>

  <bean id="initializationCmisValve" class="com.sourcesense.opencmis.server.InitCmisValve"/>

  <bean id="cmisValve" class="com.sourcesense.opencmis.server.CmisValve"/>

  <bean id="flushCmisValve" class="com.sourcesense.opencmis.server.FlushCmisValve"/>

  <bean id="jaxrsRestContentResourceProviders" class="org.springframework.beans.factory.config.MethodInvokingFactoryBean">
    <property name="targetClass" value="org.apache.commons.collections.ListUtils" />
    <property name="targetMethod" value="union" />
    <property name="arguments">
      <list>
        <ref bean="customRestContentResourceProviders" />
        <ref bean="defaultRestContentResourceProviders" />
      </list>
    </property>
  </bean>

  <!-- Pipelining -->

  <bean class="org.springframework.beans.factory.config.MethodInvokingFactoryBean">
    <property name="targetObject">
      <bean class="org.springframework.beans.factory.config.PropertyPathFactoryBean">
        <property name="targetObject" ref="org.hippoecm.hst.core.container.Pipelines" />
        <property name="propertyPath" value="pipelines"/>
      </bean>
    </property>
    <property name="targetMethod" value="put" />
    <property name="arguments">
      <list>
        <value>CmisRestContentPipeline</value>
        <bean class="org.hippoecm.hst.core.container.HstSitePipeline">
          <property name="preInvokingValves">
            <list>
              <ref bean="initializationValve" />
              <ref bean="initializationCmisValve" />
            </list>
          </property>
          <property name="invokingValves">
            <list>
<!--
    Actual configuration

              <ref bean="securityValve" />
              <ref bean="subjectBasedSessionValve" />
              <ref bean="noCacheResponseHeadersValve" />
              <ref bean="jaxrsRestContentServiceValve" />
-->
<!--
    This is taken from the old configuration; it is totally different, still
    investigating how to merge it with the one above

              <ref bean="urlValve" />
              <ref bean="siteResolvingValve" />
              <ref bean="cmisSiteContentPathResolvingValve" />
              <ref bean="securityValve" />
              <ref bean="cmisValve" />
-->

<!--
    Attempt to merge both of the above
-->
              <ref bean="securityValve" />
              <ref bean="subjectBasedSessionValve" />
              <ref bean="noCacheResponseHeadersValve" />
              <ref bean="cmisValve" />
            </list>
          </property>
          <property name="postInvokingValves">
            <list>
              <ref bean="cleanupValve" />
              <ref bean="flushCmisValve" />
            </list>
          </property>
        </bean>
      </list>
    </property>
  </bean>

</beans>
